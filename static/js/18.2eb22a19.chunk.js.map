{"version":3,"file":"static/js/18.2eb22a19.chunk.js","mappings":"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","sources":["services/fetchUsers.js","components/TweetCard/TweetCard.jsx","components/TweetCardList/TweetCardList.jsx","components/Filter/Filter.jsx","pages/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6444e238914c816083c15cad.mockapi.io/';\n\nexport async function fetchUsers(page, controller) {\n  console.log('page', page);\n\n  try {\n    const response = await axios.get('/users', {\n      params: {\n        completed: false,\n        page: `${page}`,\n        limit: 3,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\n","import { Box, Button, Typography, Avatar } from '@mui/material';\n\nimport picture from './picture21.png';\n\nexport const TweetCard = ({\n  props: { user, avatar, followers, tweets, isFollow },\n  handleFollow,\n  id,\n}) => {\n  const bgColor = isFollow ? '#5CD3A8' : '#EBD8FF';\n  const nameButton = isFollow ? 'Following' : 'Follow';\n  //let followersUI = String(followers);\n  // if (followersUI.length > 3) followersUI = followersUI.splice(3, 0, ',');\n  // console.log('bbbb', typeof followersUI);\n  // console.log(followersUI.length);\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        paddingBottom: '36px',\n        paddingTop: '28px',\n        width: '380px',\n        height: '460px',\n        backgroundColor: 'rgba(87, 54, 163, 1)',\n        borderRadius: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          left: '-1px',\n          top: '214px',\n          width: '380px',\n          height: '8px',\n          backgroundColor: '#EBD8FF',\n          border: '1px solid #000000',\n          boxShadow:\n            '0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06), inset 0px -1.71846px 3.43693px #AE7BE3, inset 0px 3.43693px 2.5777px #FBF8FF',\n        }}\n      ></Box>\n      <Box\n        sx={{\n          position: 'absolute',\n          left: '150px',\n          top: '174px',\n          zIndex: '100',\n          borderRadius: '50%',\n          borderWidth: '8px',\n          borderColor: '#EBD8FF',\n          borderStyle: 'solid',\n          boxShadow:\n            ' 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06), inset 0px -2.19582px 4.39163px #AE7BE3, inset 0px 4.39163px 3.29372px #FBF8FF;',\n        }}\n      >\n        <Avatar\n          variant=\"circular\"\n          alt={user}\n          src={avatar}\n          sx={{\n            width: 80,\n            height: 80,\n          }}\n        />\n      </Box>\n\n      <Box\n        sx={{\n          width: '308px',\n          height: '168px',\n          backgroundImage: `url(${picture})`,\n          backgroundSize: 'cover',\n        }}\n      ></Box>\n      <Box\n        sx={{\n          textTransform: 'uppercase',\n\n          lineHeight: '1.2',\n          color: '#EBD8FF',\n          textAlign: 'center',\n        }}\n      >\n        <Typography sx={{ marginBottom: '16px', fontSize: '20px' }}>\n          {tweets}&nbsp;tweets\n        </Typography>\n        <Typography sx={{ marginBottom: '26px', fontSize: '20px' }}>\n          {followers}\n          &nbsp;followers\n        </Typography>\n        <Button\n          variant=\"contained\"\n          sx={{\n            color: 'rgba(55, 55, 55, 1)',\n            fontSize: '18px',\n            backgroundColor: `${bgColor}`,\n            width: '196px',\n            borderRadius: '10px',\n          }}\n          onClick={() => handleFollow(id)}\n        >\n          {nameButton}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n","import { Grid } from '@mui/material';\nimport { TweetCard } from 'components/TweetCard/TweetCard';\nexport const TweetCardList = ({ users, handleFollow }) => {\n  return (\n    <Grid container spacing={3} sx={{ marginLeft: '0' }}>\n      {users.map(({ id, ...props }) => (\n        <Grid item xs={2} sm={4} md={4} key={id}>\n          <TweetCard id={id} props={props} handleFollow={handleFollow} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport const Filter = ({ filter, handleChange }) => {\n  return (\n    <Box\n      sx={{\n        minWidth: 120,\n        fontSize: '24px',\n        marginBottom: '30px',\n        marginTop: '30px',\n      }}\n    >\n      <FormControl fullWidth>\n        <InputLabel id=\"select-label\">Show</InputLabel>\n        <Select\n          labelId=\"select-label\"\n          id=\"select\"\n          value={filter}\n          label=\"Filter\"\n          onChange={handleChange}\n        >\n          <MenuItem value={'all'}>All</MenuItem>\n          <MenuItem value={'follow'}>Follow</MenuItem>\n          <MenuItem value={'following'}>Followings show all</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchUsers } from 'services/fetchUsers';\nimport { TweetCardList } from 'components/TweetCardList/TweetCardList';\nimport { Box, Button } from '@mui/material';\nimport { Filter } from '../components/Filter/Filter';\nimport { NavLink } from 'react-router-dom';\n\nconst LS_CARDUSER = 'cardUsers';\n// const LS_FILTER = 'filter';\n\nexport default function Tweets() {\n  const getFromLocalStorage = () => {\n    const stateFromStorage = JSON.parse(localStorage.getItem(LS_CARDUSER));\n    if (stateFromStorage === null) return [];\n    return stateFromStorage;\n  };\n\n  // const getFromLocalStorageFilter = () =>\n  //   JSON.parse(localStorage.getItem(LS_FILTER));\n\n  const [page, setPage] = useState(1);\n  const [users, setUsers] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [cardUsers, setCardUsers] = useState(getFromLocalStorage);\n\n  const handleFollow = id => {\n    const userFollow = users.find(user => user.id === id);\n    const upUsers = users.map(user => {\n      if (user.id === userFollow.id) {\n        user.isFollow = !user.isFollow;\n        user.followers = user.isFollow\n          ? (user.followers += 1)\n          : (user.followers -= 1);\n      }\n      return user;\n    });\n    setUsers([...upUsers]);\n  };\n\n  const handleChange = event => {\n    setFilter(event.target.value);\n  };\n\n  const handleLoadMore = () => setPage(prevPage => prevPage + 1);\n\n  const selectCard = () => {\n    switch (filter) {\n      case 'all':\n        setCardUsers([...users]);\n        break;\n      case 'follow':\n        setCardUsers([...users.filter(user => user.isFollow === false)]);\n        break;\n      case 'following':\n        setCardUsers([...users.filter(user => user.isFollow === true)]);\n        break;\n      default:\n        return;\n    }\n  };\n  // const location = useLocation();\n  // const backLinkHref = useRef(location.state?.from ?? '/');\n  // const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    localStorage.setItem(LS_CARDUSER, JSON.stringify(cardUsers));\n    // localStorage.setItem(LS_FILTER, JSON.stringify(filter));\n  }, [cardUsers]);\n\n  useEffect(() => {\n    // if (isFirstRender.current) {\n    //   isFirstRender.current = false;\n    //   return;\n    // }\n\n    const controller = new AbortController();\n\n    fetchUsers(page, controller)\n      .then(data => {\n        const users = data.map(({ user, avatar, id, followers, tweets }) => ({\n          user,\n          avatar,\n          followers,\n          tweets,\n          id,\n          isFollow: false,\n        }));\n        setUsers(prevState => {\n          console.log('prevState', prevState);\n          return [...prevState, ...users];\n        });\n      })\n      .catch(error => console.error(error));\n    return () => {\n      controller.abort();\n    };\n  }, [page]);\n\n  useEffect(selectCard, [filter, users]);\n\n  return (\n    <Box>\n      <Button>\n        {/* <Link to={backLinkHref.current}>Go back</Link> */}\n        <NavLink\n          style={{\n            textDecoration: 'none',\n            color: 'var(--mui-palette-primary-light)',\n          }}\n          to=\"/\"\n        >\n          Go back\n        </NavLink>\n      </Button>\n      <Filter handleChange={handleChange} filter={filter} />\n      <TweetCardList users={cardUsers} handleFollow={handleFollow} />\n      {cardUsers.length !== 0 && (\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            sx={{\n              marginTop: '30px',\n              marginBottom: '30px',\n            }}\n            onClick={handleLoadMore}\n          >\n            LOAD MORE\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n}\n"],"names":["page","controller","console","log","axios","params","completed","limit","signal","response","data","message","TweetCard","props","user","avatar","followers","tweets","isFollow","handleFollow","id","bgColor","nameButton","Box","sx","position","paddingBottom","paddingTop","width","height","backgroundColor","borderRadius","display","flexDirection","justifyContent","alignItems","left","top","border","boxShadow","zIndex","borderWidth","borderColor","borderStyle","Avatar","variant","alt","src","backgroundImage","picture","backgroundSize","textTransform","lineHeight","color","textAlign","Typography","marginBottom","fontSize","Button","onClick","TweetCardList","users","Grid","container","spacing","marginLeft","map","item","xs","sm","md","Filter","filter","handleChange","minWidth","marginTop","FormControl","fullWidth","InputLabel","Select","labelId","value","label","onChange","MenuItem","LS_CARDUSER","Tweets","useState","setPage","setUsers","setFilter","stateFromStorage","JSON","parse","localStorage","getItem","cardUsers","setCardUsers","useEffect","setItem","stringify","AbortController","fetchUsers","then","prevState","catch","error","abort","style","textDecoration","to","event","target","userFollow","find","upUsers","length","prevPage"],"sourceRoot":""}